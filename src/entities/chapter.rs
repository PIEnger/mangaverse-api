//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "chapter")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub chapter_id: String,
    pub chapter_name: String,
    pub chapter_number: String,
    pub updated_at: Option<DateTime>,
    pub manga_id: Option<String>,
    pub last_watch_time: i64,
    pub sequence_number: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::manga::Entity",
        from = "Column::MangaId",
        to = "super::manga::Column::MangaId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Manga,
    #[sea_orm(has_many = "super::chapter_page::Entity")]
    ChapterPage,
}

impl Related<super::manga::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Manga.def()
    }
}

impl Related<super::chapter_page::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChapterPage.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
